% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FinancialModel.R
\name{accountNPVreports,FinancialModel,ANY,ANY,ANY-method}
\alias{accountNPVreports,FinancialModel,ANY,ANY,ANY-method}
\title{*******************************
  accountNPVreports(host = FinancialModel) - exported method instance
*******************************}
\usage{
\S4method{accountNPVreports}{FinancialModel,ANY,ANY,ANY}(host)
}
\arguments{
\item{host}{FinancialModel S4 object with portfolio, NPV reports data}
}
\value{
Log summarizing whether processing was successful
}
\description{
accountNPVreports(host= Financial Model) 
This method computed aggregated Net Present Value report vectors for each 
account in the accountsTree of the input Financial model using the 
currentScenarioAnalysis ( i.e. risk factor environment ) of the financial
model. The results are saved in  $nmv fields in each node of the 
scenarioAccounts tree.  This method requires that netPresentValueReports( ) 
has previously been run on the financial model to generate NPV report data 
for each contract in its portfolio. The work of accountNPVreports() method is
to aggregate for each node in the accounts tree, the NPV reports of all 
contracts under that node
}
\examples{
{
fmID       <- "fm001"
fmDescr    <- "test Financial Model logic with example"
entprID    <- "modelBank01"
currency   <- "USD"
serverURL  <- "https://demo.actusfrf.org:8080/" 
yamlstring <- paste0(
 "\nname:  a Model Bank\nAssets:\n  Current:\n     actusCIDs:\n", 
 "        - pam001\n        - pam002\n        - ann003\n  ShortTerm:\n",
 "     actusCIDs:\n        - pam004\n        - ann005\n  LongTerm:\n",
 "     functionIDs:\n        - edf006\nLiabilities:\n  Debt:\n     actusCIDs:\n",
 "        - pam007\n  Equity:\nOperations:\n  Cashflows:\n     functionIDs:\n",
 "        - ocf008\n")
accountsTree <- AccountsTree(yamlstring)
mydatadir <- "~/mydata"
installSampleData(mydatadir)
cdfn  <- "~/mydata/TestPortfolio.csv"
ptf   <-  samplePortfolio(cdfn) 
tl <- Timeline(statusDate = "2023-01-01", monthsPerPeriod = 6, 
                reportCount=3, periodCount = 6)  
 fm1 <- initFinancialModel(fmID=fmID, fmDescr= fmDescr, entprID = entprID, 
                      accntsTree = accountsTree, ptf = ptf, curr = currency,
                      timeline = tl, serverURL = serverURL) 
rxdfp <- paste0(mydatadir,"/UST5Y_fallingRates.csv")
rfx <- sampleReferenceIndex(rxdfp,"UST5Y_fallingRates", "YC_EA_AAA",100) 
marketData <- list(rfx) 
ycID <- "yc001"
rd <- "2023-10-31" 
tr <-  c(1.1, 2.0, 3.5 )/100 
names(tr) <- c("1M", "1Y", "5Y")
dcc <- "30E360"
cf <- "CONTINUOUS"
ycsample <- YieldCurve(ycID,rd,tr,dcc,cf)
msg1 <- addScenarioAnalysis(fm = fm1, scnID= "UST5Y_fallingRates", 
                            rfxs = marketData, yc = ycsample )  
msg2 <- generateEvents(host= fm1) 
msg3 <- events2dfByPeriod(host= fm1) 
msg4 <- netPresentValueReports(host = fm1) 
msg5 <- accountNPVreports(host= fm1)
}
}
