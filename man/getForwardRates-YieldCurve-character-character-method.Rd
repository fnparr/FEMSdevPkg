% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/YieldCurve.R
\name{getForwardRates,YieldCurve,character,character-method}
\alias{getForwardRates,YieldCurve,character,character-method}
\title{getForwardRates(<yieldCurve>, Tfrom, Tto)}
\usage{
\S4method{getForwardRates}{YieldCurve,character,character}(yc, Tfrom, Tto)
}
\arguments{
\item{yc}{class=YieldCurve S4 object with tenorRates,}

\item{Tfrom}{character  yyyy-mm-dd date for start of forward rate interval}

\item{Tto}{character yyyy-mm-dd date for end of forward rate interval}
}
\value{
Projected pa interest rate on loan from Tfrom to Tto using YieldCurve
}
\description{
Function getforwardRates(YieldCurve, character, character) takes as
  input: (1) an initialized S4 YieldCurve object, (2) a character Tfrom date
  in yyyy-mm-dd format and (3) a character Tto date in yyyy-mm-ff from.
  The function returns the perannum forward interest rate for a loan starting
  at Tfrom and maturing at Tto based on arbitrage free projection od the
  supplied YieldCurve data with dayCountConvention and compoundung as
  set in attributes of this yield Curve.
  Tfrom must be earlier (<) Tto
}
\details{
getForwardRates() uses yearFraction() which in turn depends on and includes
  RQuantLib::yearFraction, lubridate::ymd(); getForwardRates() also uses
  function approx() from RBase to interpolate YieldCurve values

  The initial implementation of getForwardrates() restricts Tfrom and Tto to
  single date strings rather than vectors and compoundingFrequency == "NONE"
}
\examples{
{
   ycID <- "yc001"
   rd <- "2023-10-31"
   tr <-  c(1.1, 2.0, 3.5 )/100
   names(tr) <- c("1M", "1Y", "5Y")
   dcc <- "30E360"
   cf <- "NONE"
   yc <- YieldCurve(ycID,rd,tr,dcc,cf)
   rate <- getForwardRates(yc,"2024-01-01","2024-06-01")
}

}
