% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ContractAnalysis.R
\name{eventsdf2incomeReports,ContractAnalysis-method}
\alias{eventsdf2incomeReports,ContractAnalysis-method}
\title{*******************************
  eventsdf2incomeReports(cfla= ContractAnalysis) -method instance
*******************************}
\usage{
\S4method{eventsdf2incomeReports}{ContractAnalysis}(cfla)
}
\arguments{
\item{cfla}{CashAnalysis S4 object with portfolio, actusServer and risk data}
}
\value{
Log summarizing whether processing was successful
}
\description{
This method generates an incomeReport (vector) for each contract using the
  data in cfla$cashflowEventsByPeriod (dataframe), and saves this as a list 
  keyed by contractID in cfla$incomeReports. The method is exported.
  
  The processing steps are: (1) subset the cashflowEvents data frame to 
  select events in the reportPeriods and with eventType in ("IP", "FP"). 
  (2) aggregate the event payoff amounts for each contractId x reportPeriod,  
  and (3) convert the resulting dataframe into a list of incomeReport vectors 
  indexed by contractID (4) for contracts in the portfolio with no income 
  create null income reports - every contract should have a report  
  
  Note that the incomeReports from this are "analytic" income; not values 
  that would be acceptable to an accountant. Also with current ACTUS event
  types, we do not record any income for zero coupon PAMS with a premium 
  discount at IED ( no event type available representing income separable from
  the principal flow events) 
  
  Method eventsdf2IncomeReport( ) generates income reports from the 
  cashflowsByPeriod df in a single method, while the corresponding liquidity
  reports do this with the sequence of method calls: liquidityByPeriod2vec( ) 
  AND lv2LiquidityReports(cfla). The reason is that the intermediate result,
  for liquidity- the list by contractId of vectors with aggregated liquidity 
  change for each period, needs to be save dand made available for contract
  valuations. There is no corresponding need for aggregated income by period
  for each contract to be saved. Also for liquidity cumulative reports are 
  the most useful, but income reports state income in the preceding period.  
  
  The method returns a message indicating whether processing was successful.
}
\examples{
{
   mydatadir <- "~/mydata"
   installSampleData(mydatadir)
   cdfn  <- "~/mydata/BondPortfolio.csv"
   ptf   <-  samplePortfolio(cdfn)
   ptfsd <- unlist(lapply(ptf$contracts,function(x){return(x$contractTerms["statusDate"])}))
   ptf2015 <- Portfolio(contractList = ptf$contracts[which(ptfsd == "2015-01-01")])
   serverURL <- "https://dadfir3-app.zhaw.ch/"                                                          
   rxdfp <- paste0(mydatadir,"/UST5Y_fallingRates.csv")
   rfx <- sampleReferenceIndex(rxdfp,"UST5Y_fallingRates", "YC_EA_AAA",100)
   tl1 <- Timeline("2015-01-01",3,4,8)
   cfla2015 <- initContractAnalysis( analysisID = "cfla001", 
                             analysisDescription = "this_analysis_descr",
                             enterpriseID = "entp001", yieldCurve = YieldCurve(),
                             portfolio =  ptf2015, currency = "USD", 
                             scenario = list(rfx), 
                             actusServerURL = serverURL, 
                             timeline = tl1)
   logMsgs1  <- generateEvents(host = cfla2015)
   logMsgs2  <- events2dfByPeriod(host = cfla2015)
   logMsgs5  <- eventsdf2incomeReports(cfla= cfla2015)
} 
     
}
